<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:etosrpc="http://www.eastelsoft.com/schema/etosrpc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
    http://www.eastelsoft.com/schema/etosrpc 
    http://www.eastelsoft.com/schema/etosrpc/etosrpc.xsd">
	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

	<!-- AuthService -->
	<!-- <bean id="authService" class="com.eastelsoft.etos2.mqtt.auth.AuthServiceImpl"> 
		<property name="localCache"> <ref bean="localCache" /> </property> <property 
		name="ssoRedis"> <ref bean="redis" /> </property> <property name="dataSource"> 
		<ref bean="dataSource" /> </property> </bean> -->

	<bean id="authService" class="com.eastelsoft.etos2.mqtt.auth.FileAuthService">
		<property name="passwdFile">
			<value>passwd</value>
		</property>
	</bean>

	<bean id="retainMessageStore"
		class="com.eastelsoft.etos2.mqtt.server.RetainMessageStoreRedis">
	</bean>

	<bean id="willMessageStore" class="com.eastelsoft.etos2.mqtt.server.WillMessageStoreMemory">
	</bean>

	<bean id="globalTopticFilterSubStore"
		class="com.eastelsoft.etos2.mqtt.cluster.CopycatGlobalTopticFilterSubStore"
		init-method="init" destroy-method="destroy">
		<property name="clusterType">
			<value>${mqtt.cluster.type}</value>
		</property>
		<property name="nodes">
			<list>
				<value>${mqtt.cluster.nodes}</value>
			</list>
		</property>
	</bean>

	<bean id="subscriptionStore" class="com.eastelsoft.etos2.mqtt.server.SubscriptionStoreImpl">
		<property name="globalTopticFilterSubStore">
			<ref bean="globalTopticFilterSubStore" />
		</property>
	</bean>

	<bean id="mqttTaskExecutor" class="com.eastelsoft.etos2.mqtt.MqttTaskExecutorNone"
		init-method="init" destroy-method="stop">
	</bean>


	<bean id="rpcServer" class="com.eastelsoft.etos2.rpc.RpcServerNettyNIO"
		init-method="init" destroy-method="destroy">
		<property name="host">
			<value>${mqtt.server.rpc.ip}</value>
		</property>
		<property name="port">
			<value>${mqtt.server.rpc.port}</value>
		</property>
		<property name="serializeType">
			<!-- jdknative or protostuff or protobuf -->
			<value>protostuff</value>
		</property>
		<property name="useNativeEpoll">
			<value>false</value>
		</property>
		<property name="userThreadPoolType">
			<value>akka</value>
		</property>
	</bean>

	<etosrpc:service id="mqttNotifier"
		interfaceName="com.eastelsoft.etos2.mqtt.cluster.MqttNotifier" ref="mqttNotifierTarget"
		server="rpcServer" />

	<bean id="mqttNotifierTarget" class="com.eastelsoft.etos2.mqtt.cluster.MqttNotifierImpl">
	</bean>

</beans>
